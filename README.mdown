## err

**err** makes it easy to throw errors with different types. It's aimed at Node.js, which requires errors to be instances of `Error`.

## Installation

    npm install err

## Basic usage

(All code examples are in [CoffeeScript](http://coffeescript.org).)

First, add

    err = (require 'err').instance 'yourProject'

to the top of each file in your project.

Now instead of writing

    class IllegalArgument extends Error
      @name = 'IllegalArgument'
    ...
    throw new IllegalArgument('Expected a string but got an array')

you can instead just write

    throw err 'IllegalArgument', 'Expected a string but got an array'

Do *not* use `new`.

In a stack trace, this will give you

    IllegalArgument: Expected a string but got an array

The error object will be an instance of `err.getClass('IllegalArgument')`, which means that you can write, for instance,

    assert = require 'assert'
    assert.throws myErrorProneFunction, err.getClass('IllegalArgument'), 'An IllegalArgument error should be thrown'

to verify that the correct type of error is being thrown.

You can also just write

    err 'Crash!'

as shorthand for

    new Error 'Crash!'

## Logging

You can log errors as they occur by adding `true` to an `err` call. Alternatively, you can set `err.logByDefault` to `true`, in which case logging can be suppressed by passing `false` to an `err` call.

Logging is powered by [styout](https://github.com/TrevorBurnham/styout), and can be customized by manipulating `(require 'styout').instance 'err'`.

An error can also be logged later by calling `.log()` on the instance (with an optional message overriding the existing `.message`). The `.isLogged` value tells you whether an error instance has already been logged. So, you might write

    catch e
      e.log() unless e.isLogged

## Copyright and license

Copyright (c) 2011 Trevor Burnham and made available under the [MIT License](http://www.opensource.org/licenses/mit-license.php):

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.